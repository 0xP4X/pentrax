"""Add terminal-based lab models

Revision ID: 91fe2283aea2
Revises: add_payment_plans
Create Date: 2025-06-29 09:53:48.137474

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '91fe2283aea2'
down_revision = 'add_payment_plans'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lab_terminal_command',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_id', sa.Integer(), nullable=False),
    sa.Column('command', sa.Text(), nullable=False),
    sa.Column('expected_output', sa.Text(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('hint', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_optional', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lab_id'], ['lab.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lab_terminal_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lab_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=100), nullable=False),
    sa.Column('current_step', sa.Integer(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=True),
    sa.Column('completed_steps', sa.Integer(), nullable=True),
    sa.Column('total_points', sa.Integer(), nullable=True),
    sa.Column('max_points', sa.Integer(), nullable=True),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['lab_id'], ['lab.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_table('lab_terminal_attempt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lab_id', sa.Integer(), nullable=False),
    sa.Column('command_id', sa.Integer(), nullable=False),
    sa.Column('user_command', sa.Text(), nullable=False),
    sa.Column('user_output', sa.Text(), nullable=True),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('points_earned', sa.Integer(), nullable=True),
    sa.Column('attempted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['command_id'], ['lab_terminal_command.id'], ),
    sa.ForeignKeyConstraint(['lab_id'], ['lab.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('lab', schema=None) as batch_op:
        batch_op.add_column(sa.Column('lab_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('terminal_enabled', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('terminal_instructions', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('terminal_shell', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('terminal_timeout', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('allow_command_hints', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('strict_order', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('allow_retry', sa.Boolean(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('lab', schema=None) as batch_op:
        batch_op.drop_column('allow_retry')
        batch_op.drop_column('strict_order')
        batch_op.drop_column('allow_command_hints')
        batch_op.drop_column('terminal_timeout')
        batch_op.drop_column('terminal_shell')
        batch_op.drop_column('terminal_instructions')
        batch_op.drop_column('terminal_enabled')
        batch_op.drop_column('lab_type')

    op.drop_table('lab_terminal_attempt')
    op.drop_table('lab_terminal_session')
    op.drop_table('lab_terminal_command')
    # ### end Alembic commands ###
